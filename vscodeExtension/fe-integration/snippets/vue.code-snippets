{
  "vueOptionsTemplate": {
    "scope": "vue",
    "prefix": ["vue-template-options"],
    "body": [
      "<template>",
      "  <!-- $3 -->",
      "  <div class=\"${1:$TM_FILENAME_BASE}\">",
      "    $1$4",
      "  </div>",
      "</template>",
      "",
      "<script>",
      "export default {",
      "  name: \"$1\",",
      "  components: {},",
      "  // provide: {},",
      "  // inject: [],",
      "  /*",
      "  model: {",
      "    prop: \"value\",",
      "    event: \"input\",",
      "  },",
      "   */",
      "  props: {",
      "    /* attr: {",
      "      type: String | Number | Array | Object | Symbol ,",
      "      required: Boolean,",
      "      default: '' | () => [],",
      "      validator: function(value):Boolean {}",
      "    } */",
      "  },",
      "  data() {",
      "    return {};",
      "  },",
      "  computed: {",
      "    /**",
      "    computedVal(){",
      "      return val",
      "    }",
      "     */",
      "  },",
      "  watch: {",
      "    /**",
      "    funcName: {",
      "      handler (newVal, oldVal) {},",
      "      deep: true,",
      "      immediate: true",
      "    }",
      "     */",
      "  },",
      "",
      "  /* beforeCreate() {}, */",
      "  created() {},",
      "  /* beforeMount() {}, */",
      "  mounted() {",
      "    // this.\\$once(\"hook:beforeDestroy\", () => {})",
      "  },",
      "  /* beforeUpdate() {}, */",
      "  /* updated() {}, */",
      "  /** keepAlive 时调用 --- start */",
      "  /* activated() {}, */",
      "  /* deactivated() {}, */",
      "  /** keepAlive 时调用 --- end */",
      "  /* beforeDestroy() {}, */",
      "  /* destroyed() {}, */",
      "  // 离开路由前",
      "  /* beforeRouteLeave(to, from, next) {}, */",
      "  /* errorCaptured(err,vm,info) {}, */",
      "  /* directives: {}, */",
      "  /* filters: {}, */",
      "  methods: {},",
      "};",
      "</script>",
      "",
      "<style scoped lang=\"${2|css,less,scss,sass|}\">",
      ".$1 {",
      "}",
      "</style>",
      ""
    ],
    "description": "vue选项式模版"
  },
  "vueCompositionTemplateJS": {
    "scope": "vue",
    "prefix": ["vue-template-composition-js"],
    "body": [
      "<script lang=\"${2|js,jsx|}\">",
      "export default {",
      "  name: \"${1:$TM_FILENAME_BASE}\"",
      "}",
      "</script>"
      "",
      "<script setup lang=\"${2|js,jsx|}\">",
      "import { ref, toRefs, computed, watch, onMounted } from 'vue';",
      "",
      "const props = defineProps([]);",
      "const emit = defineEmits([]);",
      "",
      "const {} = toRefs(props);",
      "",
      "onMounted(async () => {",
      "",
      "});"
      "</script>",
      "",
      "<template>",
      "  <div class=\"${1:$TM_FILENAME_BASE}\">",
      "    $1$4",
      "  </div>",
      "</template>",
      "",
      "<style scoped lang=\"${3|css,less,scss,sass|}\">",
      ".$1 {",
      "}",
      "</style>",
      ""
    ],
    "description": "vue组合式模版 - JS"
  },
  "vueCompositionTemplateTS": {
    "scope": "vue",
    "prefix": ["vue-template-composition-ts"],
    "body": [
      "<script lang=\"${2|js,jsx|}\">",
      "export default {",
      "  name: \"${1:$TM_FILENAME_BASE}\"",
      "}",
      "</script>"
      "",
      "<script setup lang=\"${2|ts,tsx|}\">",
      "import { ref, toRefs, computed, watch, defineProps, defineEmits, onMounted } from 'vue';",
      "",
      "const props = defineProps<{",
      "  // data?: string[];",
      "}>();",
      "",
      "const emit = defineEmits<{",
      "  // (e: 'confirm', data: {}): void;",
      "}>();",
      "",
      "const {} = toRefs(props);",
      "",
      "onMounted(async () => {",
      "",
      "});"
      "</script>",
      "",
      "<template>",
      "  <div class=\"${1:$TM_FILENAME_BASE}\">",
      "    $1$4",
      "  </div>",
      "</template>",
      "",
      "<style scoped lang=\"${3|css,less,scss,sass|}\">",
      ".$1 {",
      "}",
      "</style>",
      ""
    ],
    "description": "vue组合式模版 - TS"
  },
  "vueTSX": {
    "scope": "javascriptreact,typescriptreact",
    "prefix": ["vue-template-jsx", "vue-template-tsx"],
    "body": [
      "import { ref, toRefs, computed, watch, onMounted, defineComponent } from 'vue';",
      "// import styles from './index.module.${2|css,less,scss|}';",
      "",
      "export default defineComponent({",
      "  name: '${1:$TM_FILENAME_BASE}',",
      "  props: {},",
      "  emits: [],",
      "  setup(props, ctx) {",
      "    const { emit, attrs, expose, slots } = ctx;",
      "",
      "    const {} = toRefs(props);",
      "",
      "    onMounted(async () => {});",
      "",
      "    return () => (",
      "      <div class=\"$1\">",
      "        $1$20",
      "      </div>",
      "    );",
      "  },",
      "});",
      ""
    ],
    "description": "vue JSX模版"
  }
}
